// scss文件开头要加上这句
@charset "utf-8";

// =================================================================

// 圆角边框:

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
// ===============================================================

// 文本溢出省略显示:

%text-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// 支持 WebKit浏览器或移动端的页面
@mixin text-ellipsis () {
    overflow : hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
}
// -webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：

// display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。
// -webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。


// text-overflow:ellipsis属性来实现单行文本的溢出显示省略号(…)。当然部分浏览器还需要加宽度width属性。
// =================================================================

// 使用rem设置字体尺寸并使用像素进行回退

// $size(要求设计的大小),$fSize(html根元素的大小)
// 这个函数计算出rem并返回

@function calculateRem($size,$fSize) {
    $remSize: $size / $fSize;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size; //如果浏览器不支持rem,这条将会覆盖下面的font-size
    font-size: calculateRem($size);
}

// ===========================================================================

// 清除浮动
// Clearfix

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// ===========================================================================
